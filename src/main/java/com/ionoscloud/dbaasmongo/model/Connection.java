/*
 * IONOS DBaaS MongoDB REST API
 * With IONOS Cloud Database as a Service, you have the ability to quickly set up and manage a MongoDB database. You can also delete clusters, manage backups and users via the API.  MongoDB is an open source, cross-platform, document-oriented database program. Classified as a NoSQL database program, it uses JSON-like documents with optional schemas.  The MongoDB API allows you to create additional database clusters or modify existing ones. Both tools, the Data Center Designer (DCD) and the API use the same concepts consistently and are well suited for smooth and intuitive use. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.dbaasmongo.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The network connection  details for your cluster.
 */
@ApiModel(description = "The network connection  details for your cluster.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-24T12:17:12.722Z[Etc/UTC]")

public class Connection {
  
  public static final String SERIALIZED_NAME_DATACENTER_ID = "datacenterId";
  @SerializedName(SERIALIZED_NAME_DATACENTER_ID)
  private String datacenterId;


  public static final String SERIALIZED_NAME_LAN_ID = "lanId";
  @SerializedName(SERIALIZED_NAME_LAN_ID)
  private String lanId;


  public static final String SERIALIZED_NAME_CIDR_LIST = "cidrList";
  @SerializedName(SERIALIZED_NAME_CIDR_LIST)
  private List<String> cidrList = new ArrayList<String>();

  

  public Connection datacenterId(String datacenterId) {
    
    this.datacenterId = datacenterId;
    return this;
  }

   /**
   * The datacenter to which your cluster will be connected.
   * @return datacenterId
  **/
  @ApiModelProperty(example = "5a029f4a-72e5-11ec-90d6-0242ac120003", required = true, value = "The datacenter to which your cluster will be connected.")

  public String getDatacenterId() {
    return datacenterId;
  }


  public void setDatacenterId(String datacenterId) {
    this.datacenterId = datacenterId;
  }



  public Connection lanId(String lanId) {
    
    this.lanId = lanId;
    return this;
  }

   /**
   * The numeric LAN ID with which you connect your cluster.
   * @return lanId
  **/
  @ApiModelProperty(example = "2", required = true, value = "The numeric LAN ID with which you connect your cluster.")

  public String getLanId() {
    return lanId;
  }


  public void setLanId(String lanId) {
    this.lanId = lanId;
  }



  public Connection cidrList(List<String> cidrList) {
    
    this.cidrList = cidrList;
    return this;
  }

  public Connection addCidrListItem(String cidrListItem) {
    this.cidrList.add(cidrListItem);
    return this;
  }

   /**
   * The list of IPs for your cluster. All IPs must be in a /24 network. Note the following unavailable IP ranges: 10.233.114.0/24 
   * @return cidrList
  **/
  @ApiModelProperty(example = "[\"192.168.1.100/24\",\"192.168.1.101/24\"]", required = true, value = "The list of IPs for your cluster. All IPs must be in a /24 network. Note the following unavailable IP ranges: 10.233.114.0/24 ")

  public List<String> getCidrList() {
    return cidrList;
  }


  public void setCidrList(List<String> cidrList) {
    this.cidrList = cidrList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Connection connection = (Connection) o;
    return Objects.equals(this.datacenterId, connection.datacenterId) && Objects.equals(this.lanId, connection.lanId) && Objects.equals(this.cidrList, connection.cidrList);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Connection {\n");
    
    sb.append("    datacenterId: ").append(toIndentedString(datacenterId)).append("\n");

    sb.append("    lanId: ").append(toIndentedString(lanId)).append("\n");

    sb.append("    cidrList: ").append(toIndentedString(cidrList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

